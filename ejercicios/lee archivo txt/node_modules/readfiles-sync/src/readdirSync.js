import fs from'fs'
import path from 'path'

export function readdirSync(opt, filesList = []) {
    if (typeof opt === 'string') {
        opt = {
            dir: '',
            baseDir: opt
        }
    }
    if (!opt.baseDir) {
        opt.baseDir = opt.dir
        opt.dir = ''
    }
    opt = Object.assign({}, {
        relative: true,
        exclude_dir: false,
        ignore: ['.DS_Store', '.git', 'node_modules']
    }, opt)
    const realDir = path.join(opt.baseDir, opt.dir)
    const files = fs.readdirSync(realDir)
    files.forEach((item) => {
        if (!opt.ignore.includes(item)) {
            const basePath = path.join(opt.dir, item)
            const fullPath = path.join(realDir, item)
            const stat = fs.statSync(fullPath)
            if (stat.isDirectory()) {
                const newOpt = Object.assign({}, opt)
                newOpt.dir = basePath
                readdirSync(newOpt, filesList)
                if (opt.exclude_dir) {
                    return true
                }
            }
            filesList.push(opt.relative ? basePath : fullPath)
        }
    })
    return filesList
}

export function readfilesSync(opt, filesList = []) {
    if (typeof opt === 'string') {
        opt = {
            dir: opt
        }
    }
    opt.exclude_dir = true
    return readdirSync(opt, filesList)
}

export default readfilesSync
